
Obtaining
---------

The current version of the predictive completion package can be obtained
from:

http://www.dr-qubit.org/emacs.php



Backing-Up Dictionaries      
-----------------------     *************
                            * IMPORTANT *
                            *************
If you are upgrading from a previous version of the predictive completion
package, make sure you first backup any dictionaries you use by dumping the
words and data they contain to files (unless you want to start from
scratch). Use

  M-x predictive-dump-dict-to-file

to make the backups (see Loading and Saving Dictionaries, Emacs Predictive
Completion Manual). It is NOT enough to make a copy of the dictionary
file. Only the plain-text "dumped" format is guaranteed to be portable across
different versions of predictive mode.

Previous versions of the predictive completion package saved dictionaries in a
compiled form that was not portable across different versions of Emacs. Newer
versions now automatically save dictionaries in both compiled and uncompiled
forms. If you are upgrading to a different version of Emacs, but continuing to
use the same version of the predictive completion package, then it is
sufficient to recompile the dictionaries from the uncompiled files (with
extension ".el") using the `byte-compile-file' command from the new version of
Emacs. Alternatively, you can delete the compiled dictionary files (extension
".elc", but make sure you do NOT delete the uncompiled files!), and let
predictive mode recompile them automatically when the dictionaries are saved.

However, backing up your dictionaries by dumping them to plain-text files, as
described above, is still a very good idea (just to be on the safe side!).



Installing
----------

To install the package, extract the files using

  tar -xvzf predictive.tar.gz

This will put the files in a new subdirectory called predictive/. You're
strongly encouraged to byte-compile all the Lisp files and create the
required dictionaries by running

  make

in the predictive/ directory (see also below). You can specify where your
emacs resides with

  make EMACS=/path/to/emacs

Finally, move the Lisp files (files with extensions .el and .elc) to a
directory in your Emacs load-path (see Lisp Libraries, GNU Emacs Manual). Note
that some of the Lisp files required to support specific major-modes
(e.g. LaTeX and html) are in subdirectories of the predictive/ directory
(e.g. predictive/latex/ and predictive/html/), and these files also need to be
moved to a directory in your load-path. You can view the current load-path
using `C-h v load-path' in Emacs.


If you want the predictive completion minor-mode to be available whenever you
start Emacs, put the following line in your .emacs file:

  (require 'predictive)

Alternatively, you can save memory and only load the lisp libraries when
they're needed (i.e. when you first run the `predictive-mode' command), by
putting the following in your .emacs instead:

  (autoload 'predictive-mode "/path/to/predictive"
            "Turn on Predictive Completion Mode." t)

If you want to enable support for specific major-modes (e.g. LaTeX and html),
you will have to add additional lines to your .emacs file, e.g.:

  (require 'predictive-latex)
  (require 'predictive-html)

Again, there is an autoload alternative:

  (autoload 'predictive-setup-latex "/path/to/predictive-latex")
  (autoload 'predictive-setup-html "/path/to/predictive-html")





Other Installation Options
--------------------------

--- Byte-Compiling ---

For performance reasons, it is important to byte-compile the lisp code, at
least for the core Lisp files. Running

  make

in the predictive/ directory, as described above, does this automatically.

Alternatively, you can do it manually using `byte-compile-file' or one of the
other Emacs byte-compilation commands (see The Compilation Functions, GNU
Emacs Lisp Reference Manual) for all of the Lisp files contained in the
package. Personally, I like to use `dired' when byte-compiling multiple
files. (See Operating on Files, GNU Emacs manual.)



--- Creating the Dictionaries ---

The only pre-prepared dictionary included in the main package is the English
dictionary (so that predictive completion mode works "out of the box", albeit
slowly if you don't byte-compile). However, you will get better results if you
roll your own English dictionary and tailor it to your writing style. (See
Getting the Most out of Dictionaries, Predictive Completion Manual.) Other
dictionaries (e.g. for LaTeX and html) are included as plain-text word
lists.

All the dictionaries are created automatically when you run

  make

in the predictive/ directory created by extracting the files, as described
above.

The English dictionary can be created separately by running

  make dict-english

The dictionaries for other languages (e.g. LaTeX and html) can be created
separately by running e.g.

  make dict-latex
  make dict-html

in the predictive/ directory. Note that although the make command must be run
in the predictive/ directory, these dictionaries are created in subdirectories
of predictive/ (e.g. predictive/latex/ and predictive/html/). If you want to
create all the dictionaries at once, without also byte-compiling the Lisp
files (as "make" on it's own would do), run

  make dicts

You can, if you prefer, create the dictionaries manually using the
`predictive-create-dict' command from within Emacs. You should give the
dictionary the same file name as the word list file, minus the final
".word-list" extension. (See Creating Dictionaries, Emacs Predictive
Completion Manual.)
