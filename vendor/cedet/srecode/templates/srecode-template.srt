;;; srecode-template.srt --- Templates for Semantic Recoders

;; Copyright (C) 2005, 2007, 2008 Eric M. Ludlam

;; Author: Eric Ludlam <zappo@gnu.org>
;; X-RCS: $Id$

;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 2, or (at
;; your option) any later version.

;; This program is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program; see the file COPYING.  If not, write to
;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;; Boston, MA 02110-1301, USA.

set escape_start "$"
set escape_end "$"
set mode "srecode-template-mode"
set priority "70"

set comment_start  ";;"
set comment_end    ""
set comment_prefix ";;"

set SEPARATOR "----"

set DOLLAR "$"

context file

prompt NEWMODE "Major Mode for templates: "

template empty :file :user :time
"Insert a skeleton for a template file."
----
$>:filecomment$

set mode "$?NEWMODE$"

;; end
----

context declaration

prompt NAME "Name of new template: "
prompt KEY "Key Binding: " read read-char

template function
"Insert a template block for Srecoder templates."
----

template $?NAME$
""
$SEPARATOR$
$^$
$SEPARATOR$
bind "$?KEY$"

----
bind "f"

prompt NAME "Name of new variable: "

template variable
"Inert a variable."
----
set $?NAME$ "$^$"
----
bind "v"

template context
"Insert a context statement."
----

context $?NAME$

----
bind "c"

context code

prompt NAME "Name of variable: " read srecode-read-variable-name

template var :srt
"Insert a variable with completion from the current file."
----
$ESCAPE_START$$?NAME$$ESCAPE_END$
----
bind "v"

prompt NAME "Name of macro: "

template ask :srt
"Insert a prompting variable."
----
$ESCAPE_START$?$?NAME$$ESCAPE_END$
----
bind "a"

template comment :srt
----
$ESCAPE_START$!$^$$ESCAPE_END$
----
bind "c"

prompt TEMPLATE "Template to include: " read srecode-read-template-name

template include :srt
----
$ESCAPE_START$>:$?TEMPLATE$$ESCAPE_END$
----
bind "i"

template point
----
$ESCAPE_START$^$ESCAPE_END$
----
bind "p"

template section :srt
"Insert a section, or looping construct."
----
$ESCAPE_START$#$?NAME$$ESCAPE_END$
$^$
$ESCAPE_START$/$NAME$$ESCAPE_END$
----
bind "s"

;;
;; These are for testing features of template files.
;;

template test :user
----
$! This is a comment in the template. $
;; $AUTHOR$
;; $AUTHOR:upcase$
----

template subs
----
;; Before Loop
$#LOOP$
;;  - loop stuff
$/LOOP$
;; After Loop
$>:function$
----


;; end
